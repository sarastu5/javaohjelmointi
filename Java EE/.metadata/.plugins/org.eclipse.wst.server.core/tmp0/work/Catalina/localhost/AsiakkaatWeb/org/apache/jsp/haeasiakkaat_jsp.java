/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2018-05-04 19:13:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.Dao;
import model.Asiakas;
import java.util.ArrayList;

public final class haeasiakkaat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 @SuppressWarnings("unchecked") 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/onkokirjauduttu.jsp", Long.valueOf(1525375288228L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dao.Dao");
    _jspx_imports_classes.add("model.Asiakas");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


if (session.getAttribute("kayttaja")==null) {	
	response.sendRedirect("index.jsp");
	return;
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"main.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" integrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" crossorigin=\"anonymous\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<title>Asiakkaiden haku</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t<form action=\"HaeAsiakkaat\" method=\"post\">\r\n");
      out.write("\t\t\tHakusana:\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"hakusana\" id=\"hakusana\">&nbsp;\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"Hae\">\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"Lisää uusi asiakas\" id=\"lisaa\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t");

		if (request.getParameter("ilmo")!=null) {
			out.print(request.getParameter("ilmo"));
		}
	
      out.write("\r\n");
      out.write("\t<br><br>\r\n");
      out.write("\t<table class=\"table table-striped\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"otsikko\">Etunimi</td>\r\n");
      out.write("\t\t\t\t<td class=\"otsikko\">Sukunimi</td>\r\n");
      out.write("\t\t\t\t<td class=\"otsikko\">Puhelin</td>\r\n");
      out.write("\t\t\t\t<td class=\"otsikko\">Sähköposti</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");

		if (request.getAttribute("asiakkaat") != null) {
			ArrayList<Asiakas> asiakkaat = (ArrayList<Asiakas>)request.getAttribute("asiakkaat");
			for (int i=0; i<asiakkaat.size(); i++) {
				out.print("<tr>");
				out.print("<td>" + asiakkaat.get(i).getEtunimi() + "</td>");
				out.print("<td>" + asiakkaat.get(i).getSukunimi() + "</td>");
				out.print("<td>" + asiakkaat.get(i).getPuhelin() + "</td>");
				out.print("<td>" + asiakkaat.get(i).getSposti() + "</td>");
				out.print("<td><a class='poista' href='PoistaAsiakas?poista_id=" + asiakkaat.get(i).getId() + "'><abbr title='Poista'>X</abbr></a>&nbsp;");
				out.print("<a class='muuta' href='muutaasiakas.jsp?id=" + asiakkaat.get(i).getId() + "&etunimi=" + asiakkaat.get(i).getEtunimi() + "&sukunimi=" + asiakkaat.get(i).getSukunimi() + "&puhelin=" + asiakkaat.get(i).getPuhelin() + "&sposti=" + asiakkaat.get(i).getSposti() + "'><abbr title='Muuta'>M</abbr></a></td>");
				out.print("</tr>");
			}
		}
		else {
			Dao dao = new Dao();
			ArrayList<Asiakas> asiakkaat = dao.listaaKaikki();
			for (int i=0; i<asiakkaat.size(); i++) {
				out.print("<tr>");
				out.print("<td>" + asiakkaat.get(i).getEtunimi() + "</td>");
				out.print("<td>" + asiakkaat.get(i).getSukunimi() + "</td>");
				out.print("<td>" + asiakkaat.get(i).getPuhelin() + "</td>");
				out.print("<td>" + asiakkaat.get(i).getSposti() + "</td>");
				out.print("<td><a class='poista' href='PoistaAsiakas?poista_id=" + asiakkaat.get(i).getId() + "'><abbr title='Poista'>X</abbr></a>&nbsp;");
				out.print("<a class='muuta' href='muutaasiakas.jsp?id=" + asiakkaat.get(i).getId() + "&etunimi=" + asiakkaat.get(i).getEtunimi() + "&sukunimi=" + asiakkaat.get(i).getSukunimi() + "&puhelin=" + asiakkaat.get(i).getPuhelin() + "&sposti=" + asiakkaat.get(i).getSposti() + "'><abbr title='Muuta'>M</abbr></a></td>");
				out.print("</tr>");
			}
		}
		
      out.write("\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t$(\"#hakusana\").focus();\r\n");
      out.write("\t\t\t$(\"#lisaa\").click(function() {\r\n");
      out.write("\t\t\t\twindow.location.href = 'lisaaasiakas.jsp';\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js\" integrity=\"sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js\" integrity=\"sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
